@page "/Quotes"
@inject Data.Services.QuoteService service
@inject Data.Services.CharacterService characterService

<div class="container">
    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Id</th>
                    <th>Preceded By</th>
                    <th>Character</th>
                    <th>Location</th>
                    <th>Text</th>
                </tr>
            </thead>
            <tbody>
                @if (QuotesList.Any())
                {
                    @foreach (var quote in QuotesList)
                    {
                        <tr>
                            <td>@quote.Id</td>
                            <td>@quote.ParentQuote?.Id</td>
                            <td>@quote.Character?.Name</td>
                            <td>Ch. @quote.Chapter Pg. @quote.Page</td>
                            <td>@quote.Text</td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No quotes available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">

            <div class="p-3 mb-3 bg-primary text-white text-center">Add New Quote</div>

            <EditForm Model="@NewQuote">
                <div class="form-group">
                    <label for="parent">Preceded By</label>
                    <input type="text" id="parent" class="form-control" @bind-value="@NewQuote.ParentQuote.Id" />
                </div>

                <div class="form-group">
                    <label for="character">Character ID</label>
                    <input type="text" id="name" class="form-control" @bind-value="@NewQuote.Character.Id" />
                </div>

                <div class="form-group">
                    <label for="chapter">Chapter</label>
                    <input type="text" id="chapter" class="form-control" @bind-value="@NewQuote.Chapter" />
                </div>

                <div class="form-group">
                    <label for="page">Page</label>
                    <input type="text" id="page" class="form-control" @bind-value="@NewQuote.Page" />
                </div>

                <div class="form-group">
                    <label for="quoteText">Quote Text</label>
                    <InputTextArea id="quoteText" class="form-control" @bind-Value="@NewQuote.Text" />
                </div>

                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="AddNewQuote"> Add Quote</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    List<Quote> QuotesList = new List<Quote>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshQuotes();
    }

    private async Task RefreshQuotes()
    {
        QuotesList = await service.GetQuotesAsync();
    }

    public Quote NewQuote { get; set; } = new Quote() { ParentQuote = new Quote(), Character = new Character() };
    private async Task AddNewQuote()
    {
        await service.AddQuoteAsync(NewQuote);
        NewQuote = new Quote() { ParentQuote = new Quote(), Character = new Character() };
        await RefreshQuotes();
    }

    Quote UpdateQuote = new Quote();
    private void SetQuoteForUpdate(Quote quote)
    {
        UpdateQuote = quote;
    }

    private async Task UpdateQuoteData()
    {
        await service.UpdateQuoteAsync(UpdateQuote);
        await RefreshQuotes();
    }

    private async Task DeleteQuote(Quote quote)
    {
        await service.DeleteQuoteAsync(quote);
        await RefreshQuotes();
    } 
}